package {	import flash.geom.Point;	import flash.geom.ColorTransform;	import fl.motion.Color;	public class PlayerBoid extends Boid {		public var colorTransform:ColorTransform = new ColorTransform();		public var clr:String = "blue";		public function PlayerBoid(master:BoidController) {			super(master , 0);			this.mass = 30;			this.currentSpeed = 1;			this.scaleX = 2.2;			this.scaleY = 2.2;			this.clr = "blue";			colorTransform.redOffset = -255;			colorTransform.greenOffset = -30;			colorTransform.blueOffset = 0;			maxSpeed = 4;			this.personalSpace = 10;			this.transform.colorTransform = colorTransform;		}		public function morph():void {			//trace("morph");			if (this.clr == "blue") {				this.clr = "red";				colorTransform.redOffset = 255;				colorTransform.greenOffset = -255;				colorTransform.blueOffset = -255;				maxSpeed = 20;				this.personalSpace = this.sightRange;				this.transform.colorTransform = colorTransform;			}			else {				this.clr = "blue";				colorTransform.redOffset = -255;				colorTransform.greenOffset = -30;				colorTransform.blueOffset = 0;				maxSpeed = 4;				this.personalSpace = 10;				this.transform.colorTransform = colorTransform;			}		}		public override function update():void {			currentVector.x += (stage.mouseX - this.x)/9;			currentVector.y += (stage.mouseY - this.y)/9;			currentSpeed = cartesianDistance(new Point(stage.mouseX,stage.mouseY),new Point(this.x,this.y)) / 9;			if (currentSpeed > maxSpeed) {				currentSpeed += (maxSpeed - currentSpeed)/1.03;			}			currentVector = normalizeVector(currentVector,currentSpeed);			this.x +=  currentVector.x;			this.y +=  currentVector.y;			for (var i:uint = 0; i < master.boidArray.length; i++) {				var otherBoid:Boid = master.boidArray[i];				var currentDistance:Number = cartesianDistance(new Point(this.x,this.y),new Point(otherBoid.x,otherBoid.y));				if (currentDistance < personalSpace+otherBoid.personalSpace  && currentDistance != 0 ) {					if (this.clr == "red"){												var nextVector:Point = normalizeVector(new Point(this.x - otherBoid.x, this.y - otherBoid.y), -20);						otherBoid.currentSpeed += 5;						otherBoid.currentVector.x += nextVector.x;						otherBoid.currentVector.y += nextVector.y;					}				}			}			this.rotation =  (-Math.atan2(currentVector.x,currentVector.y) * 57.2957795);		}	}}